import org.jbox2d.util.nonconvex.*;
import org.jbox2d.dynamics.contacts.*;
import org.jbox2d.testbed.*;
import org.jbox2d.collision.*;
import org.jbox2d.common.*;
import org.jbox2d.dynamics.joints.*;
import org.jbox2d.p5.*;
import org.jbox2d.dynamics.*;

Timer timer;
Maxim maxim;
AudioPlayer wallSound, crowd;
Physics physics;
Body footy, keeper;
Vec2 startPoint, startPoint1;
CollisionDetector detector;

int ballSize = 60;
int keeperSize = 150;
PImage  ballImage, tip, keeperImage;
int score = 0;
boolean dragging = false;

int m;

void setup() {
  size(800,600);
  frameRate(60);


  tip = loadImage("scrapyard2.jpg");
  ballImage = loadImage("Generic_football.png");
  keeperImage = loadImage("keeper2.png");
  imageMode(CENTER);
  
  physics = new Physics(this, width, height, 0, -8, width*2, height*2, width, height, 100);

  physics.setCustomRenderingMethod(this, "myCustomRenderer");
  physics.setDensity(10.0);
  
  

  startPoint = new Vec2(width-100, 100);
  startPoint = physics.screenToWorld(startPoint);
  startPoint1 = new Vec2(width - 100, 100);
  startPoint1 = physics.screenToWorld(startPoint1);
  footy = physics.createCircle(width/2, -100, ballSize/2);
  keeper = physics.createRect(width - (keeperSize/2) , 200, width, 200 + keeperSize);
   
  
  detector = new CollisionDetector (physics, this);

  maxim = new Maxim(this);
  wallSound = maxim.loadFile("wall.wav");
  crowd = maxim.loadFile("crowd.wav");
  crowd.setLooping(true);
  crowd.volume(0.4);
  wallSound.setLooping(false);
  wallSound.volume(1.0);
  crowd.play();
  
  timer = new Timer(25000);  
  timer.start();

}


void draw() {
  image(tip, width/2, height/2, width, height);
  fill(0);
  textSize(32);
  text("Score:", width - 200, height - 10);
  text(score/2, width - 100, height - 10);
  crowd.play();
  myCustomRenderer(physics.getWorld());
  textSize(20);
  text("Start from here", 30, (height/2) + 55 );
  textSize(20);
  text("Don't let it fall!", (width/2) + 200, height - 100);
  if (timer.isFinished()) {
    textSize(22);
    text("Try again", (width/2) - 50, height/2);
    gameover();
    timer.start();
  }


}

void gameover() 
{
  
  noLoop();
}

void keyPressed() {
  if (key == CODED) {
    if (keyCode == UP) 
    text("Press UP arrow to restart", width/2, height/2);
    help();

  }
}
  
void help()
{
  image(loadImage("scrapyard2.jpg"), width/2, height/2, width, height);
}

  

void mouseDragged()
{
  dragging = true;
  footy.setPosition(physics.screenToWorld(new Vec2(mouseX, mouseY)));
  keeper.setPosition(physics.screenToWorld(new Vec2(map(mouseX, 0, width, 500, 700), 600)));

}


void mouseReleased()
{
  dragging = false;
  Vec2 impulse = new Vec2();
  impulse.set(startPoint);
  impulse = impulse.add(footy.getWorldCenter());
  impulse = impulse.mul(15);
  footy.applyImpulse(impulse, footy.getWorldCenter());
 
  Vec2 impulse1 = new Vec2();
  impulse1.set(startPoint1);
  impulse1 = impulse.add(keeper.getWorldCenter());
  impulse1 = impulse.mul(20);
  keeper.applyImpulse(impulse1, keeper.getWorldCenter());
  
}
  
void myCustomRenderer(World world) {
  stroke(0);

  Vec2 screenStartPoint = physics.worldToScreen(startPoint);
  Vec2 screenfootyPos = physics.worldToScreen(footy.getWorldCenter());
  
  Vec2 screenStartPoint1 = physics.worldToScreen(startPoint1);
  Vec2 screenkeeperPos = physics.worldToScreen(keeper.getWorldCenter());
  
  float footyAngle = physics.getAngle(footy);
  pushMatrix();
  translate(screenfootyPos.x, screenfootyPos.y);
  rotate(-radians(footyAngle));
  image(ballImage, 0, 0, ballSize, ballSize);
  popMatrix();
  
  pushMatrix();
  translate(screenkeeperPos.x, 150);
  image(keeperImage, 0, 0, keeperSize/2, keeperSize);
  popMatrix();
  
  
  
}
 

void collision(Body b1, Body b2, float impulse)
{

    if (b1 == footy || b2 == footy) {
   
    wallSound.cue(0);
    wallSound.play(); 
   
    Vec2 screenStartPoint = physics.worldToScreen(startPoint);
    Vec2 screenfootyPos = physics.worldToScreen(footy.getWorldCenter());
    if( screenfootyPos.x == (width/2 + 100) || screenfootyPos.y == (height/2 - 100) )
    {
      score+=1;
    }
    else if(screenfootyPos.y > height - 200)
    score+= -1;
    if( screenfootyPos.x > (width/2 + 300) || screenfootyPos.y < (height/2 - 300))
     score+= 1; 
   }
   
  
}
